<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GH670</title>
  
  <subtitle>挺菜的~，学习中...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.wblog.tech/"/>
  <updated>2020-05-16T02:34:57.176Z</updated>
  <id>www.wblog.tech/</id>
  
  <author>
    <name>GH670</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>疫情之下超长假期之开学前的闲谈杂事</title>
    <link href="www.wblog.tech/hexo-xiantanzashi1.html"/>
    <id>www.wblog.tech/hexo-xiantanzashi1.html</id>
    <published>2020-05-16T02:26:18.960Z</published>
    <updated>2020-05-16T02:34:57.176Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">疫情之下超长假期之开学前的闲谈杂事</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5a8c707d7691848589637ebac2c4e67c2be22fe133fb458231a99efffee02b4b">cbc64c84934653700c9114c189ccf22491e8a1732e1ca01cbed7b050a59b37a363d929db0fadbfea813602b2aef526e46d1f4d2038abadb186439922203a5781649bf1e8aad11db03d5a38ba1845437dc9acc6af6dab40f8dee8af644bd3217d23f91db0c346f811f3fee97c7fda7ece7e23e546ed206205fe7e493bc02c39200c99c1e7bce52a8ae2e27a61a448512a25571a7945fb87da51e25445064f84b89e0cbeb9d3da225e6bb40822df9555a74390f66c862d2087245ffd0f2dbc9edd6229d1d9cc97c0e59232065065730df70c987fef5a7577ea59370c11cfb7b4dc6c5663b109ca16519e8db3d810e47947ab615ab1921b029971f27c312a548888928b1c041b851d6ec06df34e37c53a08965104b285ea94ccd7c927fd0658f1b0a066d72061a51aad8dea71fdb0bcfa8836c8936884602168822b4994cbf148404d9f9d04309b5381b7570fc1e28e69dc4aaecd95123932c18d7ee2a15251a660c0a1f1fbe36f79b2680063349e9ad83428fb91a59eaa77fdb11cd44ecf72052940ccaf1faf5aa099f1f133a9216161efd56314741b5f09c263216441e52c2edfac308f54874451ca99cd599fe9c219136ed0e9912b00e977c0ad994c7274b75bf35bc39e690e02ec8d926ce39fe3134c3a66f8b1aa224877ff7fa1901f6f1002fbba60fa6414073773553c1d5e67ef4a6e8139536ba0072b51e0b238aef9a559df683a823756da45cad246a729ca4ef0ff13280dc53196af3b7c7835fbdfd6a9</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      疫情之下超长假期之开学前的闲谈杂事
    
    </summary>
    
    
    
      <category term="随笔记事" scheme="www.wblog.tech/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-关于静态博客动态说说的实现</title>
    <link href="www.wblog.tech/hexo-shuoshuo.html"/>
    <id>www.wblog.tech/hexo-shuoshuo.html</id>
    <published>2020-05-11T11:11:17.008Z</published>
    <updated>2020-05-11T11:49:46.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ul><li>基于leancloud实现的可实时发布说说的js.</li><li>指条明路 → <a href="https://artitalk.js.org/" target="_blank" rel="noopener">https://artitalk.js.org/</a></li><li>由于此项目处于初期阶段，更新或许比较频繁，故此文仅作参考，建议去查阅官方文档。<a id="more"></a><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="Leancloud"><a href="#Leancloud" class="headerlink" title="Leancloud"></a>Leancloud</h2></li></ul><ol><li>使用国际版的leancloud注册账号以及完成绑定邮箱及手机号等实名操作，否则不能创建应用。</li><li>创建应用，名称随意，建议取名为shuoshuo.</li><li>在新创建的应用中，找到”结构化数据”下的”用户”，点击”添加用户”,输入用户名密码，记住此用户名密码，下面的设置会用到。</li><li>点击”结构化数据”，点击”class”下的”shuoshuo”。找到”权限”，在”Class”访问权限”中,将”add_fields”,”create”,”delete”,”update”设置指定用户可见，输入刚刚设置的用户名，系统会自动匹配到刚刚你设置的用户名密码的，点击添加并确认即可。</li><li>在菜单栏中找到”设置”-&gt;”应用keys”，将”AppID”和”AppKey”记录下来，之后的设置会用到。</li></ol><h2 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h2><ol><li><p>hexo new page shuoshuo ,生成一个说说界面，在此文件夹中的index.md文件中，填下下属代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://libs.baidu.com/jquery/2.0.0/jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var img="";                 /</span><span class="regexp">/说说旁边显示的头像</span></span><br><span class="line"><span class="regexp">var appID="";               /</span><span class="regexp">/Leancloud中的AppID</span></span><br><span class="line"><span class="regexp">var appKEY="";              /</span><span class="regexp">/Leancloud中的AppKEY</span></span><br><span class="line"><span class="regexp">var per="";                 /</span><span class="regexp">/每页显示说说的数量</span></span><br><span class="line"><span class="regexp">var username="";            /</span><span class="regexp">/Leancloud中设置的用户名</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;div id=<span class="string">"lazy"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="artitalk"&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"https://unpkg.com/artitalk"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>上述中列出来的五项var，均为必须设置。<br>其中还可以在后添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> placeholder1=<span class="string">""</span><span class="comment">//在编辑说说的输入框中的占位符</span></span><br><span class="line"><span class="keyword">var</span> placeholder2=<span class="string">""</span><span class="comment">//输入密码的输入框的占位符</span></span><br><span class="line"><span class="keyword">var</span> placeholder3=<span class="string">""</span><span class="comment">//输入头像url的输入框的占位符（不填写开启即为默认头像）</span></span><br><span class="line"><span class="keyword">var</span> lazy=<span class="string">""</span>        <span class="comment">//是否开启加载动画（1：开启 0：关闭）</span></span><br><span class="line"><span class="keyword">var</span> bgimg=<span class="string">""</span>    <span class="comment">//说说输入框背景图片（需为图片格式）</span></span><br></pre></td></tr></table></figure></li><li><p>更新测试  </p></li></ol><ul><li>hexo g &amp;&amp; hexo s,进行本地的更新测试。<br>打开设置的说说界面，这个说说界面还需要在博客主题目录下的_config.yml添加，不同的主题添加的方式不同，我的主题为在menu中添加”说说：/shuoshuo/“即可。<br>进入说说界面，进行测试即可。<br>输入完说说的内容后，输入之前在leancloud创建的shuoshuo应用中,设置的用户名的密码，点击发布即可。</li></ul><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>项目目前处于初步阶段，更新或频繁，建议多多阅读官方的使用文档。</li><li>我的主题为yileas,基于yilia主题的魔改版。</li><li>再次声明，此教程仅作参考，详细具体还请详见项目使用文档。</li><li>教程就是这么的简单，该功能的添加并不复杂，原则上适合任何的hexo主题。<blockquote><p>项目源地址：<a href="https://github.com/Drew233/Artitalk" target="_blank" rel="noopener">https://github.com/Drew233/Artitalk</a><br>项目文档：<a href="https://artitalk.js.org/" target="_blank" rel="noopener">https://artitalk.js.org/</a><br>我的说说：<a href="https://wblog.tech/photos/Sshuo.html" target="_blank" rel="noopener">https://wblog.tech/photos/Sshuo.html</a>  </p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      Hexo-实现静态博客的动态说说
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git-部分指令</title>
    <link href="www.wblog.tech/git-bufenzhiling.html"/>
    <id>www.wblog.tech/git-bufenzhiling.html</id>
    <published>2020-05-10T07:57:06.865Z</published>
    <updated>2020-05-11T03:37:02.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ul><li>记录一些常用的git指令，</li><li>学习记录~<a id="more"></a><h1 id="git指令"><a href="#git指令" class="headerlink" title="git指令"></a>git指令</h1><h2 id="git指令（一）"><a href="#git指令（一）" class="headerlink" title="git指令（一）"></a>git指令（一）</h2></li></ul><ol><li>git本地上传至仓库(已链接远程仓库的情况下)</li></ol><ul><li>git init</li><li>git add .</li><li>git commit -m ‘描述’</li><li>git pull –rebase origin marster</li><li>git push -u origin master</li></ul><ol start="2"><li>git远程与本地链接  </li></ol><ul><li>git remote -v<br>查看本地关联的远程仓库</li><li>git remote add origin ‘远程仓库地址’<br>本地关联远程仓库</li><li>git remote rm origin<br>取消本地关联的远程仓库</li></ul><h2 id="git指令（二）"><a href="#git指令（二）" class="headerlink" title="git指令（二）"></a>git指令（二）</h2><ol><li>git-分支</li></ol><ul><li>git branch<br>查看本地分支</li><li>git branch -r<br>查看远程分支</li><li>git branch -a<br>查看所有分支</li><li>git branch [newbranch]<br>创建新的分支</li><li>git checkout [newbranch]<br>切换分支</li><li>git push origin [newbranch]<br>将新分支push到GitHub</li><li>git branch -D -r<br>删除本地分支</li></ul><blockquote><p>在进行分支操作的时候，注意当前所属分支</p></blockquote><h2 id="git指令（三）"><a href="#git指令（三）" class="headerlink" title="git指令（三）"></a>git指令（三）</h2><ul><li>待续..</li></ul>]]></content>
    
    <summary type="html">
    
      Git-部分指令
    
    </summary>
    
    
    
      <category term="git" scheme="www.wblog.tech/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-实现博客的相册模块</title>
    <link href="www.wblog.tech/hexo-xiangce.html"/>
    <id>www.wblog.tech/hexo-xiangce.html</id>
    <published>2020-05-09T03:07:06.027Z</published>
    <updated>2020-05-11T03:37:56.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ul><li>Hexo——为你的博客添加相册功能。  </li><li>大体实现：在GitHub上创建一个新的仓库，存储图片。通过python脚本程序，对图片进行裁剪压缩，上传至GitHub仓库。生成josn格式数据，通过此文件进行图片的显示访问。  </li></ul><a id="more"></a><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><h2 id="1-GitHub操作"><a href="#1-GitHub操作" class="headerlink" title="1.GitHub操作"></a>1.GitHub操作</h2><ul><li>创建GitHub图库<br>在你的GitHub中创建一个新的GitHub仓库，命名随意，我的命名是跟随参考教程里大佬的命名：Blog-Back-Up。<h2 id="2-本地操作"><a href="#2-本地操作" class="headerlink" title="2.本地操作"></a>2.本地操作</h2><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3></li></ul><ol><li><p>在<strong>博客根目录</strong>下的source文件夹下建立一个photos文件夹</p></li><li><p>将样式文件放到photos文件夹下，样式文件如下图所示，样式文件的下载地址为：<a href="https://github.com/GH670/photos-file" target="_blank" rel="noopener">https://github.com/GH670/photos-file</a><br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/05/09/97cb4c54887d8ef895eb958e692b3f47.png" alt=""></p></li></ol><p><strong>说明一下❗：红色框框中的是需要放置在该文件夹内的文件。黑色框框中的文件夹内的文件是需要放置到本博文第二部分所说的文件夹内的。黄色框中的是第二部分所说的生成的data.json文件。</strong><br>3. 修改ins.js文件中的render函数，将其中的url修改对应至你存放图片的地址<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/05/09/9438ef11c415bec933d883b682b9edba.png" alt=""></p><ul><li><strong>特别说明❗</strong>：  </li><li>其中的url地址，为下图红框框中内容所示，点击图片显示后、点击<strong>Download</strong>后的url地址。不是下面图片所处状态的url地址。或可根据下方代码段中地址样式修改。  </li><li>对于本文中第二个图片中红色画线的路径，保证本文第一个图片中红色方框框中的内容均放置位置正确，即可不用修改。<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/05/09/87b2dac1f2be480674cea0524d038318.png" alt=""></li></ul><p>或可根据下面代码段地址样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var minSrc &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;GH670&#x2F;Blog-Back-Up&#x2F;master&#x2F;min_photos&#x2F;&#39; + data.link[i];</span><br><span class="line">var src &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;GH670&#x2F;Blog-Back-Up&#x2F;master&#x2F;photos&#x2F;&#39; + data.link[i];</span><br><span class="line">&#x2F;&#x2F;var minSrc &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;lawlite19&#x2F;blog-back-up&#x2F;master&#x2F;min_photos&#x2F;&#39; + data.link[i];</span><br><span class="line">&#x2F;&#x2F;var src &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;lawlite19&#x2F;blog-back-up&#x2F;master&#x2F;photos&#x2F;&#39; + data.link[i];</span><br></pre></td></tr></table></figure><p>得出，可按下方所示填写修改url。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var minSrc &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;你的GitHub用户名&#x2F;GitHub仓库名&#x2F;master&#x2F;min_photos&#x2F;&#39; + data.link[i];</span><br><span class="line">var src &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;你的GitHub用户名&#x2F;GitHub仓库名&#x2F;master&#x2F;photos&#x2F;&#39; + data.link[i];</span><br></pre></td></tr></table></figure><p><strong>务必仔细查看，地址切勿填写错误❗</strong></p><h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><ol start="4"><li>在你的本地任何一个位置建立一个新的文件夹。存放要上传至GitHub相册图库的相片及文件。<br>将此文件夹与上述建立的存放相片的GitHub仓库相连接，具体的git指令此处不再过多说明，可见此链接文章：<a href="https://wblog.tech/github-push.html" target="_blank" rel="noopener">https://wblog.tech/github-push.html</a>，如果有什么疑问可留言。</li><li>将上述下载的文件中，黑色框中文件夹内的文件放置在本地该文件夹内。<br>(即下方图片所示文件)<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/05/09/bb84a07f4f8668cd908bfe321a4231a7.png" alt=""></li><li>修改tool.py文件大约135行处，如下图，将下面位置路径修改为你本地位置的。<strong>此处非常重要</strong>，此处为data.json文件的生成路径，将此文件生成至博客根目录下source/photos文件夹下即可。放置错误可能会导致最终设置完成后相册界面并不能加载出任何的相片，只会显示“图片正在加载中..”，<strong>切记data.json文件的生成路径要为博客根目录下source/photos文件中。</strong><br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/05/09/362905b52401e30dea84b2d70f12eb21.png" alt=""></li><li>每次向相册中添加新的相片时，都需要运行tool.py文件。tool.py中存放着对图片的一系列操作函数、操作完成后产生data.j文件以及将操作后的相片上传至GitHub仓库中。<strong>注意此处，GitHub仓库的连接要保证没有问题，否则会上传不上去文件，进而导致相册功能的失败</strong><br><em>此外，运行python脚本文件需电脑安装有python的运行环境。</em></li></ol><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><a href="https://wblog.tech/photos/" target="_blank" rel="noopener">https://wblog.tech/photos/</a>  </p><ul><li>由于相册中相片是放置在GitHub仓库中的，基于国内访问GitHub的速度，在不翻墙的情况下，大多数时间会导致图片显示不出来。主要原因就是国内访问GitHub网站速度慢。  </li><li>解决方法：1.cdn加速 2.VPN</li></ul><blockquote><p>参考如下：<br><a href="https://blog.csdn.net/u013082989/article/details/70162293" target="_blank" rel="noopener">https://blog.csdn.net/u013082989/article/details/70162293</a><br><a href="https://blog.csdn.net/wardseptember/article/details/82780684" target="_blank" rel="noopener">https://blog.csdn.net/wardseptember/article/details/82780684</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      Hexo-实现博客的相册模块
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-友链样式的优化</title>
    <link href="www.wblog.tech/hexo-youlianyouhua.html"/>
    <id>www.wblog.tech/hexo-youlianyouhua.html</id>
    <published>2020-05-07T04:21:51.002Z</published>
    <updated>2020-05-11T03:38:03.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ul><li>友链样式的优化，增加头像…  <a id="more"></a><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1></li></ul><ol><li>在tools.ejs文件里找到以下代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% for (var i in theme.friends)&#123; %&gt;    </span><br><span class="line">    &lt;li class&#x3D;&quot;search-li&quot;&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;&lt;%- url_for(theme.friends[i]) %&gt;&quot; target&#x3D;&quot;_blank&quot; style&#x3D;&quot;color:#969696&quot; class&#x3D;&quot;search-title&quot;&gt;&lt;i class&#x3D;&quot;icon&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">        &lt;%if( url_for(theme.friends[i]) )&#123;%&gt;</span><br><span class="line">            &lt;%&#x3D; i %&gt;&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;&#x2F;li&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li>将&lt;%= i %&gt;前面加上以下代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class&#x3D;&quot;imgUrl&quot; src&#x3D;&quot;&lt;%&#x3D;  url_for(theme.friends[i]) + &#39;favicon.ico&#39; %&gt;&quot;  alt&#x3D;&quot;icon&quot; height&#x3D;&quot;25&quot; width&#x3D;&quot;25&quot;  &#x2F;&gt;&amp;nbsp&amp;nbsp&amp;nbsp</span><br></pre></td></tr></table></figure></li><li>将tools.ejs文件尾部加上以下代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">  t &#x3D; document.getElementsByClassName(&quot;imgUrl&quot;);</span><br><span class="line">  for(i &#x3D; 0; i &lt; t.length; i++)&#123;</span><br><span class="line">      t.item(i).onerror &#x3D; function()&#123;</span><br><span class="line">        this.src &#x3D; &quot;https:&#x2F;&#x2F;GH670.github.io&#x2F;F3yaX.png&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>这样，就为友链增加了头像，后续优化，待定…<blockquote><p>参考：链接失效…</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      Hexo-友链样式的优化
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-为博客增加Dplayer视频播放插件</title>
    <link href="www.wblog.tech/hexo-dplayer.html"/>
    <id>www.wblog.tech/hexo-dplayer.html</id>
    <published>2020-05-06T09:16:08.934Z</published>
    <updated>2020-05-11T03:37:43.730Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h1><p>为博客文章增加视频播放功能，如我的博客文章：<a href="https://wblog.tech/bilibili-houlang.html" target="_blank" rel="noopener">bilibli~后浪</a> 所示。</p><a id="more"></a><h1 id="Dplayer功能插件"><a href="#Dplayer功能插件" class="headerlink" title="Dplayer功能插件"></a>Dplayer功能插件</h1><p>一个将diygod的dplayer运行在hexo的插件  </p><blockquote><p>项目地址：<a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-dplayer</a>  </p></blockquote><h1 id="简单使用："><a href="#简单使用：" class="headerlink" title="简单使用："></a>简单使用：</h1><ol><li>npm install hexo-tag-dplayer –save</li><li>简单使用：（以bilibili为例）</li></ol><ul><li>打开一个视频，鼠标移至’分享’处。</li><li>选择’嵌入代码’，点击复制。<br>样式如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;71816014&amp;bvid&#x3D;BV11E411k76T&amp;cid&#x3D;124600873&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>效果如下：    </li></ul><iframe src="//player.bilibili.com/player.html?aid=71816014&bvid=BV11E411k76T&cid=124600873&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  <p>另外可选择设置大小宽高：   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe height&#x3D;600 width&#x3D;1000 src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;71816014&amp;bvid&#x3D;BV11E411k76T&amp;cid&#x3D;124600873&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p>修改大小宽高后显示效果如下：    </p><iframe height=600 width=1000 src="//player.bilibili.com/player.html?aid=71816014&bvid=BV11E411k76T&cid=124600873&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>    <p>具体实现，可进入上方给出的GitHub地址进行查看，这只是简单的实现。<br>最后，看完博文操作完成后可以顺便欣赏下B站UP主【小仙若】的优美舞姿😋  </p><blockquote><p>存在些许不足和bug,<br>适配问题未解决，视频大小固定不适配。待更新..<br>该插件插入方式..详见GitHub仓库</p></blockquote><p>另外插入方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer key&#x3D;value ... %&#125;</span><br></pre></td></tr></table></figure><p>详细介绍，➡GitHub仓库内。</p>]]></content>
    
    <summary type="html">
    
      Hexo-为博客增加Dplayer视频播放插件
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>bilibili~后浪</title>
    <link href="www.wblog.tech/bilibili-houlang.html"/>
    <id>www.wblog.tech/bilibili-houlang.html</id>
    <published>2020-05-04T12:43:05.339Z</published>
    <updated>2020-05-11T03:35:24.914Z</updated>
    
    <content type="html"><![CDATA[<p>奔涌吧！后浪！！🛫  </p><iframe height=600 width=1000 src="//player.bilibili.com/player.html?aid=412935552&bvid=BV1FV411d7u7&cid=186803402&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  <a id="more"></a>  <p>那些口口声声，<br>一代不如一代的人，应该看着你们；<br>像我一样，我看着你们，满怀羡慕。<br>人类积攒了几千年的财富，<br>所有的知识、见识、智慧和艺术，<br>像是专门为你们准备的礼物；<br>科技繁荣、文化繁茂、城市繁华，<br>现代文明的成果被层层打开，可以尽情地享用；<br>自由学习一门语言、学习一门手艺、欣赏一部电影、去遥远的地方旅行。<br>很多人，从小你们就在自由探索自己的兴趣；<br>很多人在童年就进入了不惑之年；<br>不惑于自己喜欢什么，不喜欢什么。<br>人与人之间的壁垒被打破，<br>你们只凭相同的爱好，<br>就能结交千万个值得干杯的朋友，<br>你们拥有了，我们曾经梦寐以求的权利——选择的权利<br>你所热爱的就是你的生活，你们有幸遇见这样的时代；<br>但是时代更有幸，遇见这样的你们。<br>我看着你们，满怀敬意。<br>向你们的专业态度致敬，<br>你们正在把传统的变成现代的，把经典的变成流行的；<br>把学术的变成大众的，把民族变成世界的；<br>你们把自己的热爱变成了一个和成千上万的人分享快乐的事业，<br>向你们的自信致敬。<br>弱小的人，才习惯嘲讽和否定；<br>内心强大的人，从不吝啬赞美和鼓励。<br>向你们的大气致敬，<br>小人同而不和，君子美美与共，和而不同。<br>更年轻的身体，更容得下多元的文化审美和价值观。<br>有一天我终于发现，<br>不只是我们在如何教你们生活，<br>你们也在启发我们，怎样去更好的生活。<br>那些抱怨一代不如一代的人，应该看看你们；<br>就像我一样，我看着你们满怀感激；<br>因为你们这个世界会更喜欢中国，<br>因为一个国家最好看的风景，<br>就是这个国家的年轻人。<br>因为你们，<br>这世上的小说、音乐、电影所表现的青春<br>就不再是忧伤迷茫，而是善良、勇敢、无私、无所畏惧。<br>是心里有火，眼里有光。<br>不用活成我们想象中的样子，<br>我们这一代人的想象力不足以想象你们的未来；<br>如果你们依然需要我们的祝福，<br>那么，<br>奔涌吧，后浪<br>我们在同一条奔涌的河流。  </p>]]></content>
    
    <summary type="html">
    
      bilibili~后浪
    
    </summary>
    
    
    
      <category term="随笔记事" scheme="www.wblog.tech/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-魔改yilia主题~Yileas</title>
    <link href="www.wblog.tech/hexo-theme-yileas.html"/>
    <id>www.wblog.tech/hexo-theme-yileas.html</id>
    <published>2020-05-02T22:58:06.521Z</published>
    <updated>2020-05-16T01:04:51.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于yilia的魔改操作-yileas"><a href="#基于yilia的魔改操作-yileas" class="headerlink" title="基于yilia的魔改操作~yileas"></a>基于yilia的魔改操作~yileas</h1><blockquote><p>GitHub地址：<a href="https://github.com/GH670/yileas" target="_blank" rel="noopener">https://github.com/GH670/yileas</a>    </p></blockquote><p>存在许多的不足，欢迎大家的issues、PR、star.  </p><a id="more"></a><h1 id="yileas"><a href="#yileas" class="headerlink" title="yileas"></a>yileas</h1><p>hexo-theme-yileas🎈<br>基于<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia主题</a>的个性化定制——<strong>yileas</strong>  </p><blockquote><p>欢迎访问我的博客：<a href="https://wblog.tech/" target="_blank" rel="noopener">wblog.tech</a> 查看效果。</p></blockquote><h2 id="yileas-→-注重准确-崇尚简洁"><a href="#yileas-→-注重准确-崇尚简洁" class="headerlink" title="yileas → 注重准确,崇尚简洁"></a><strong>yileas → 注重准确,崇尚简洁</strong></h2><p>目前仅仅对原主题进行了 <em>魔改</em> .<br>后续会<strong>慢慢地</strong>对其进行更改<br>欢迎各位的PR.<br><a href="#说明">说明</a>  </p><h2 id="魔改："><a href="#魔改：" class="headerlink" title="魔改："></a>魔改：</h2><h3 id="更改："><a href="#更改：" class="headerlink" title="更改："></a>更改：</h3><ul><li>不定期优化</li></ul><ol><li>简单化的内容修改</li><li>增加网站运行时间</li><li>增加访问量统计功能(不蒜子)</li><li>添加代码复制功能</li><li>添加天气功能模块duigoucha</li><li>添加版权声明</li><li>添加valine评论系统</li><li>修复部分bug,修复微信分享，添加文章访问量统计</li><li>添加字数、阅读时长统计（博客根目录：npm i -save hexo-wordcount）</li><li>实现文章内容的加密（博客根目录：npm install hexo-blog-encrypt）<br>需加密文章的Front-matter中添加：<br>password: 是该博客加密使用的密码<br>abstract: 是该博客的摘要，会显示在博客的列表页<br>message: 这个是博客查看时，密码输入框上面的描述性文字  </li><li>实现文章的置顶功能  ①更改插件 ②修改源码 （均在博客根目录有修改）<br>修改博客根目录下的_config.yml → index_generator（order_by: top: -1 date: -1 ）<br>在需要置顶的文章的Front-matter中加上top选项即可<br>top后面的数字越大，优先级越高。</li><li>添加”说说”功能，可动态实时发布说说。(博客根目录下：hexo new page shuoshuo)<br>博客根目录下的操作，简化版教程:<a href="https://wblog.tech/hexo-shuoshuo.html" target="_blank" rel="noopener">https://wblog.tech/hexo-shuoshuo.html</a> (建议查看官方文档！)<br>官方文档:<a href="https://artitalk.js.org/" target="_blank" rel="noopener">https://artitalk.js.org/</a>  </li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>博客根目录下的_config.yml需按照自己所需更改。</li><li>主题根目录下的_config.yml按照所给’框架’填写即可，可自行按照所需更改。</li><li>。。。</li></ol><h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3><ol><li>优化..</li><li>Fork me on GitHub</li><li>…</li></ol><h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><p><del>1. DaoVoice在线聊天</del><br><del>2. live2d看板娘</del><br><del>3. 飘雪特效</del><br><del>4. 页面点击小红心效果</del><br><del>5. 网易云音乐插件</del><br><del>6. 头像旋转功能</del><br><del>7. 文字输入特效</del><br><del>8. 添加悬停预览图片效果</del><br><strong>均会拖慢加载速度，非必需，未更改</strong></p><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><ol><li>能力欠缺，完善中…</li><li>yileas为yilia的个人魔改版。因yilia作者已停止对其主题的维护更新，故对此进行深度修改定制，形成自己特有的主题风格。</li><li>yileas为吸取各路大神经验总结而成，感谢开源、感谢互联网🌏</li><li>不定时→偶尔更新维护</li><li>依然存在很多的bug,欢迎大家提出issue.</li></ol>]]></content>
    
    <summary type="html">
    
      Hexo-魔改yilia主题~YIleas
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>【GitHub+Coding】个人博客双线部署</title>
    <link href="www.wblog.tech/hexo-shuangxianbushu.html"/>
    <id>www.wblog.tech/hexo-shuangxianbushu.html</id>
    <published>2020-04-27T11:43:31.436Z</published>
    <updated>2020-05-11T03:37:47.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>将自己的个人博客双线部署，GitHub+Coding.</p><ul><li>真香</li><li>自己部署过程的懒人记事🐾<a id="more"></a></li></ul><h2 id="大体步骤"><a href="#大体步骤" class="headerlink" title="大体步骤"></a>大体步骤</h2><ul><li>文字简单叙述</li></ul><h1 id="先前条件"><a href="#先前条件" class="headerlink" title="先前条件"></a>先前条件</h1><p>已经将hexo个人博客部署到了GitHub上了。</p><h1 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h1><ol><li>拥有一个属于自己的coding账号</li><li>建立一个博客仓库，选择代码托管项目模板</li><li>项目名称最好要跟coding用户名一致，这样的好处主要在于访问方便，当然，自我估计如果要绑定自定义域名的话，此处可随便（注：博主未尝试，博主依然老老实实的添加的名称一致😂）</li><li>配置SSH，【个人设置】-【SSH公钥】-【新增公钥】。<br>此方式与GitHub的配置方法差不多，因之前部署至GitHub的时候，已经有了，一般情况下存放在 C:\Users\用户名.ssh 目录下的 id_rsa.pub 文件里，用记事本打开复制其内容即可。名称任意。<br>添加公钥后，我们可以右键 Get Bash，输入以下命令来检查是否配置成功：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@你的用户名.coding.net</span><br></pre></td></tr></table></figure>若出现以下提示，则证明配置成功：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Coding 提示: Hello XXX, You&#39;ve connected to Coding.net via SSH. This is a personal key.</span><br><span class="line">XXX，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</span><br></pre></td></tr></table></figure></li><li>开启coding pages<br>进入你的coding项目仓库，选择项目设置-项目与成员-功能开关。打开持续部署功能开关。返回，选择持续部署选项-静态网站，选择立即部署，这样你就可以通过coding分配的域名进行访问了，如果想要通过自定义域名访问，在进入设置界面，自定义域名处绑定域名（注，绑定自定义域名需要将域名DNS 设置中添加 CNAME 记录指向DNS 设置中添加 CNAME 记录指向coding分配给你的域名）</li><li>自定义域名<br>打开域名管理，增加两条CNAME解析，指向coding分配的域名，记录处填写coding分配的域名，解析线路选择默认，主机记录一个填写www,一个填写@。和GitHub类似。将GitHub的解析线路更改为境外。这样做的原因是让在境内访问的时候走coding路线，境外访问的时候走GitHub路线。（据听说，阿里云的是智能解析，解析路线选择默认时，境外走GitHub，境内走coding。有兴趣的可以试一下，当然博主这次还是老老实实的将GitHub的默认解析路线修改为了境外😂）<br>在自定义域名处绑定自己的域名，并设置一个首选域名。之后，打开强制HTTPS。</li><li>配置_config.yml<br>进入你的项目，在右下角区域选择连接方式，建议选择SSH方式，较稳定。一键复制，然后打开本地博客根目录下的_config.yml文件，找到 deploy，添加 coding地址 ：coding:git@…，也就是刚刚复制的 SSH 地址。</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/qq_36759224/article/details/100879609" target="_blank" rel="noopener">Hexo 双线部署到 Coding Pages 和 GitHub Pages 并实现全站 HTTPS</a>  </p>]]></content>
    
    <summary type="html">
    
      Hexo-个人博客双线部署,【gitHub+coding】个人博客双线部署
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>阿里云-将Hexo博客搭建至云服务器上</title>
    <link href="www.wblog.tech/hexo-aliyundajianhexo.html"/>
    <id>www.wblog.tech/hexo-aliyundajianhexo.html</id>
    <published>2020-04-26T08:30:52.204Z</published>
    <updated>2020-05-17T12:19:30.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>记录文，无任何教程指导。<br>仅为自己检查反省所用。</p><a id="more"></a><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><ol><li>博客根目录下的_config.yml</li></ol><ul><li>修改仓库地址指向使其部署到云服务器上。</li><li>？大佬说：不可将博客同时部署到云服务器和GitHub上？<br>Q：现在我要是把serve里的网址把公网ip改成我的域名，博客配置里的部署指向同时指向云服务器和GitHub，能实现吗？<br>A:实现不了</li></ul><ol start="2"><li>vhost文件夹内文件的修改</li></ol><ul><li>cd /etc/nginx/vhost<br>vim blog.conf<br>修改地址指向：公网ip?域名？</li></ul><ol start="3"><li>vi /etc/nginx/nginx.conf </li></ol><ul><li>教程：添加include /etc/nginx/vhost/*.conf;</li><li>增加补错：添加root /home/www/website;<br>解决公网IP打开依然是centos的问题。<br>未解决，大佬：nginx版本的问题，无碍。</li></ul><ol start="4"><li>.ssh.ssh</li></ol><ul><li>设置git用户密码问题、成功公钥密钥文件ssh-keygen<br>目录下文件并不为id_rsa 和 id_rsa.pub<br>文件为.ssh.shh(模糊记忆)<br>但本地连接云服务器没问题。<br>注:本地连接云服务后云服务器上的相关操作均在本地电脑远程连接操作</li></ul><ol start="5"><li>现已取消阿里云服务器的部署。</li></ol><ul><li>#include /etc/nginx/vhost/*.conf;</li></ul><ol start="6"><li>域名解析</li></ol><ul><li>指到云服务器了？将hexo博客部署云服务器上</li></ul><h3 id="关闭开启部署，"><a href="#关闭开启部署，" class="headerlink" title="关闭开启部署，"></a>关闭开启部署，</h3><ul><li>#include /etc/nginx/vhost/*.conf;</li><li>???</li></ul><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p><a href="https://blog.csdn.net/NoCortY/article/details/99631249" target="_blank" rel="noopener">从零搭建Hexo博客并部署阿里云服务器（奶妈级教学）</a><br>特别感谢大佬的解答！🧐</p>]]></content>
    
    <summary type="html">
    
      阿里云-将Hexo博客搭建至云服务器上
    
    </summary>
    
    
    
      <category term="阿里云" scheme="www.wblog.tech/tags/aliyun/"/>
    
  </entry>
  
  <entry>
    <title>【闲】</title>
    <link href="www.wblog.tech/hexo-bowen1.html"/>
    <id>www.wblog.tech/hexo-bowen1.html</id>
    <published>2020-04-25T09:38:03.554Z</published>
    <updated>2020-05-11T03:35:58.895Z</updated>
    
    <content type="html"><![CDATA[<p>有人说，想要看一个人是否优秀，那就看他闲下来做什么。</p><p> 　　这世上有人忙里偷闲，利用坐车和排队的间隙，读书，思考，写作，也有人终日无所事事，虚度光阴。</p><p>　　闲，并不是一个人的福气。相反，废掉一个人最快的方式就是让他闲下来。</p><p>　　正如罗曼·罗兰所说：“生活中最沉重的负担不是工作，而是无聊。”</p><a id="more"></a><p>　　01</p><p>　　闲着闲着，一个人就废了。</p><p>　　蔡康永曾说过：“当你没有上进心的时候，你是在杀人，你不小心，杀了你自己。”</p><p>　　朋友大学毕业后，凭着高学历进了一家大公司，以为从此一生安稳，本职工作完成后便悠闲地追剧。</p><p>　　身边有同事下班后忙着考证、进修时，她嗤之以鼻，认为别人学历不如自己，再怎么努力也无济于事。</p><p>　　虽然每天按时上下班，和同事做着相似的工作，但只有潮水退去的时候，才能知道谁在裸泳。</p><p>　　不过五年时间，行业环境影响下，公司面临改革，需要裁员，高学历出身的她赫然在列。</p><p>　　彼时才发现，面临初出茅庐的年轻人，自己的体力和脑力都已经拼不过，几年来累积下来的阅历和经验没有转化成核心竞争力。</p><p>　　毕业八年的她被迫重返人才市场，但彼时的她与毕业时相比毫无长进，面试屡屡碰壁。</p><p>　　李尚龙曾说：</p><p>　　“真正的安稳是历经世事后的淡薄，你还没有见过世界，就想隐退山林，到头来只会是井底之蛙。”</p><p>　　人生如逆水行舟，不进则退。</p><p>　　优胜劣汰的世界里，你必须不断提升自己的价值。</p><p>　　被窝里的温度，远不如未来的收获温暖；书本里的故事，总有你学到的人生，贪图安逸，只会让生命生锈。</p><p>　　常有人感叹中年危机来得猝不及防，但其实在它到来之前，你有无数次让它绕开你的机会，但也许正是因为你选择了安逸，才给了它可乘之机。</p><p>　　02</p><p>　　人活到极致，就是不愿意闲下来。</p><p>　　沈从文曾说：我一生最怕是闲，一闲就把生命的意义全失去了。</p><p>　　他的学生汪曾祺曾在文章里这样描述沈从文：</p><p>　　冬天屋里生不起火，用被子围起来，还是不停地写。</p><p>　　到了晚年，他也不愿闲下来，参考大量资料整理完成了《中国古代服饰研究》。</p><p>　　别人享乐时候，他在写，有人质疑抨击他的时候，他还在写。</p><p>　　让忙碌成为生活的常态，是实现人生价值的必经之路。</p><p>　　人生有许多美好，无非是长期坚持的结果，而那些厉害的人，无一例外都过着自律的生活。</p><p>　　“闲不住”从来都不是人们所说的毛病和坏事，而是上天给的嘉奖。</p><p>　　一口气爬上10层楼梯不带喘气，这对一个年轻人来说都很难，但91岁的老人李绍鲁做到了。</p><p>　　他的养生秘诀就是：不让自己闲下来。</p><p>　　每天早上七点起床，锻炼一小时，八点吃完早餐，出门散步，九点半回来读书看报，下午听音乐、练书法，再继续锻炼一小时，抽空还帮老伴做家务。</p><p>　　有句话说：闲人愁多，懒人病多，忙人快活！</p><p>　　的确如此。当一个人闲下来，他的心灵和身体都将受到折磨。闲下来会容易胡思乱想，自怨自艾，而身体上的懒惰也会让我们离健康越来越远。</p><p>　　相反，忙碌，却是世间珍贵的良药，忙起来，生活便有了奔头。</p><p>　　日本作家石黑一雄曾说：年老之后 当我回顾自己的一生，看到我用毕生的精力去捕捉那个世界独特的美，我相信我会心满意足的，没有人能使我相信我是虚度了光阴。</p><p>　　台湾一群平均年龄81岁的老人，骑着摩托车环游台湾的故事触动了很多人。</p><p>　　不老骑士说：“走，我们骑着欧兜迈（摩托车）环台去！ ”</p><p>　　他们便出发了，从南到北，从黑夜到白天，环岛十三天。他们当中有2位曾患癌症，4位需要带助听器，8位患了心脏病，每个人都有关节退化的毛病。</p><p>　　身体和心灵总要有一个在路上，这件事与年龄无关。安静地待在医院里，是一种活法，勇敢地走出去也是一种活法。</p><p>　　忙碌且艰难地活着，虽然辛苦，但如果有来世，很多人还是会选择那种滚烫的人生，只有那样才能实现人生的价值。</p><p>　　03</p><p>　　太闲的人生，其实是一场灾难。</p><p>　　茨威格曾说：</p><p>　　命运所赠送的每一份礼物，都暗自标好了价格。</p><p>　　英国有位男子，因为中奖从一贫如洗的垃圾工变成了千万富翁。</p><p>　　他辞去工作，挥霍无度地购买豪宅名车、吸毒、嫖娼和赌博。</p><p>　　在短短7年中败光了970万英镑，重新沦为穷光蛋，而妻子女儿也双双弃他而去。</p><p>　　物质可以满足一个人一时的快乐，但当人生只剩下享乐和放纵，就难以体会到发自内心的快乐和成就感。</p><p>　　正如爱因斯坦所说：</p><p>　　“我从来不把安逸和快乐看作是生活目的本身——这种伦理基础，我叫它猪栏的理想。”</p><p>　　华人首富李嘉诚，一生征战商界，拥有无数财富，即便这样直到90岁他才选择退休。</p><p>　　没退休之前，不论几点睡觉，他总在清晨5点59分闹铃响后起床。随后，读新闻，打一个半小时高尔夫，再去办公室，开始工作，坚持数十年如一日。</p><p>　　李嘉诚的人生正印证了那句话：一万年太久，只争朝夕。</p><p>　　闲下来，你可能会快乐一阵子，但重复和虚无，有一天会让你感到厌倦。</p><p>　　忙起来可能会很累，你需要把时间分成好几份，甚至像挤海绵那样挤时间，但却可以让我们收获到很多，比如财富、幸福、内心的充实。</p><p>　　人生数载几十年，我们总要为这个世界留下些什么。永远不要把“闲”当做上天的恩赐，那些让你快乐的东西，有一天也会毁灭你。</p><p>　　04</p><p>　　《菜根谭》有言：人生太闲，则别念窃生；太忙，则真性不现。</p><p>　　诚然，太忙或太闲都不可取，忙中有闲，闲中有忙，有事做，有人爱，有所期待，才是人生最圆满的状态。</p><p>　　当你开始懂得珍惜时间，利用好时间，合理安排自己的生活，就是在延长生命的长度，拓宽人生的厚度，提升人生的高度。</p><p>　　所谓不负此生，就是不曾辜负生命中的每个阶段。</p>]]></content>
    
    <summary type="html">
    
      Hexo-博文1
    
    </summary>
    
    
    
      <category term="随笔记事" scheme="www.wblog.tech/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript——相关</title>
    <link href="www.wblog.tech/JavaScript-xiangguan.html"/>
    <id>www.wblog.tech/JavaScript-xiangguan.html</id>
    <published>2020-04-23T00:30:29.945Z</published>
    <updated>2020-05-11T03:38:36.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>javascript相关！<br>记录</p><a id="more"></a><h2 id="Expression-expected-javascript"><a href="#Expression-expected-javascript" class="headerlink" title="Expression expected.javascript"></a>Expression expected.javascript</h2><p>设置valine评论系统，修改valine.ejs插件。使得出现Expression expected.JavaScript错误。<br>百度查询得，javascript里面不可以直接使用EL表达式。<br>大佬：VScode未按照ejs插件?<br>暂不影响使用，待修改！</p>]]></content>
    
    <summary type="html">
    
      JavaScript——相关
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="www.wblog.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>GitHub==star</title>
    <link href="www.wblog.tech/github-star.html"/>
    <id>www.wblog.tech/github-star.html</id>
    <published>2020-04-22T01:17:46.494Z</published>
    <updated>2020-05-11T03:37:19.843Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">宝藏仓库！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="a089aa1e20f801d823ada22f53e8c6670e0ac7976a5cfda842df4e282967088e">8b53947704863c5f576a7399d4515d8fc13ad6a3c950dc6dc9bc6ed94cd34a4b588e9de919b63174b0307fe117c140eb922d7b2fc4588e8eef407eba602a061119ec2471efe6dc553fd2f51a05a34d0c2c0eec388e710fbdd657a7a50617e5dc6ddac153b168ea07c407b7ba82ab6a693c41dc28d618f137b93b3efabc26ca9f9af3d90531778ef658baadcd83bd55ea9df449cb404a730cd690e0a6467f1b2f7afd4ff03be94421268d722785d452c510c45809ec2d747bd5ea222084ca8961150f8bb15c99d73f23939ace217a66d66b2938e5dbc250cd2129bebbfd3cb3430739553c1275942cf6a224bc00d292c6</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      github-star
    
    </summary>
    
    
    
      <category term="github" scheme="www.wblog.tech/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-博客搭建文件解析</title>
    <link href="www.wblog.tech/hexo-wenjianjiexi.html"/>
    <id>www.wblog.tech/hexo-wenjianjiexi.html</id>
    <published>2020-04-21T23:49:39.386Z</published>
    <updated>2020-05-11T03:37:37.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建文件解析"><a href="#Hexo博客搭建文件解析" class="headerlink" title="Hexo博客搭建文件解析"></a>Hexo博客搭建文件解析</h1><p>Hexo博客搭建的各个文件解析，俗称 wiki (手动滑稽)</p><a id="more"></a><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul><li>source - Hexo加载主题资源的主目录，需要编译生成</li><li>source-src - 源文件目录，编译到source目录</li><li>layout - 模板目录</li><li>languages - 语言配置目录</li></ul><p>一般来说，如果你想修改页面的html，请到layout文件夹里直接修改； 如想修改css，js，请到source-src文件夹里，并通过后面介绍的开发步骤，编译到source里。</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>你需要使用以下环境进行开发：</p><ul><li>node - 0.4.2以上</li><li>npm - 3.0.0以上</li><li>ejs - 前端模板</li><li>sass - css预编译</li><li>webpack - 构建工具</li></ul>]]></content>
    
    <summary type="html">
    
      Hexo-文件解析
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>C语言——简单知识点</title>
    <link href="www.wblog.tech/c-jiandanzhishidian.html"/>
    <id>www.wblog.tech/c-jiandanzhishidian.html</id>
    <published>2020-04-21T08:30:33.344Z</published>
    <updated>2020-05-11T03:36:02.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>本博文主要记录C语言的一些简单知识点、及疑难杂症。</p><a id="more"></a><h1 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h1><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>p1,*p1,&amp;p1。  </p><p>if int a=233  , &amp;a=0xa0<br>int *p , &amp;p1=0xb0<br>p1=&amp;a<br>*p=233<br>p1=0xa0 , &amp;p1=0xb0 , *p1=233   </p>]]></content>
    
    <summary type="html">
    
      C语言——简单知识点
    
    </summary>
    
    
    
      <category term="c语言" scheme="www.wblog.tech/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-解决picgo+github图床上传的各种问题</title>
    <link href="www.wblog.tech/hexo-picgoup.html"/>
    <id>www.wblog.tech/hexo-picgoup.html</id>
    <published>2020-04-17T10:20:58.754Z</published>
    <updated>2020-05-11T03:38:24.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>在使用picgo+github搭建博客图床的时候，通常会遇到上传失败等问题，如下图所示：<br><img src="https://cdn.jsdelivr.net/gh/GH670/Blog-Back-Up-P-V@master/2020/04/17/1d80cdc57bdd47ce515cf9e607e46133.png" alt=""><br>PicGo并不怎么稳定。下面介绍一种完美解决的方案，亲测有效！<br>（图片OK，但是视频上传目测不可；另，就偶尔上传比较慢，可能是我网的问题，我网确实不怎么样）</p><a id="more"></a><h2 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h2><ol><li>VPN</li><li>google或outlook邮箱</li></ol><h2 id="处理解决步骤："><a href="#处理解决步骤：" class="headerlink" title="处理解决步骤："></a>处理解决步骤：</h2><h3 id="1-进入下方网址"><a href="#1-进入下方网址" class="headerlink" title="1. 进入下方网址"></a>1. 进入下方网址</h3><p><a href="https://www.000webhost.com/" target="_blank" rel="noopener">https://www.000webhost.com/</a>  ,浏览网页选择下方箭头所指。<br>(没有该网站账号密码没有关系，选择之后注册登录即可，当然也可以先注册登录再选择。)<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/8ce62c6db13d1462df4ae02a382ca29c.png" alt=""></p><h3 id="2-选择图示。建立自己的网站，会让你输入用户名密码。"><a href="#2-选择图示。建立自己的网站，会让你输入用户名密码。" class="headerlink" title="2. 选择图示。建立自己的网站，会让你输入用户名密码。"></a>2. 选择图示。建立自己的网站，会让你输入用户名密码。</h3><p>（网站用户名密码自定义设置）<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/5587cd173cd826697f57e0847eff30e7.png" alt=""></p><h3 id="3-选择Upload-your-site"><a href="#3-选择Upload-your-site" class="headerlink" title="3. 选择Upload your site"></a>3. 选择Upload your site</h3><p><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/079856396959da531f545727c5fd4481.png" alt=""></p><h3 id="4-之后可能会让你登录管理界面，输入的用户名和密码就是2中自定义设置的用户名密码。"><a href="#4-之后可能会让你登录管理界面，输入的用户名和密码就是2中自定义设置的用户名密码。" class="headerlink" title="4. 之后可能会让你登录管理界面，输入的用户名和密码就是2中自定义设置的用户名密码。"></a>4. 之后可能会让你登录管理界面，输入的用户名和密码就是2中自定义设置的用户名密码。</h3><h3 id="5-登录完毕之后暂时最小化浏览器界面，进行其他的操作。"><a href="#5-登录完毕之后暂时最小化浏览器界面，进行其他的操作。" class="headerlink" title="5. 登录完毕之后暂时最小化浏览器界面，进行其他的操作。"></a>5. 登录完毕之后暂时<strong>最小化</strong>浏览器界面，进行其他的操作。</h3><h3 id="6-配置up-php"><a href="#6-配置up-php" class="headerlink" title="6. 配置up.php"></a>6. 配置up.php</h3><p>项目地址：<a href="https://github.com/kjhuanhao/autoPicCdn" target="_blank" rel="noopener">https://github.com/kjhuanhao/autoPicCdn</a><br>下载此项目，修改其中的<strong>up.php</strong>文件。<br>只需修改下列代码，按提示修改即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">define(&quot;REPO&quot;,&quot;仓库&quot;);&#x2F;&#x2F;必须是下面用户名下的公开仓库</span><br><span class="line">define(&quot;USER&quot;,&quot;github仓库名&quot;);&#x2F;&#x2F;必须是当前GitHub用户名</span><br><span class="line">define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);&#x2F;&#x2F;</span><br><span class="line">define(&quot;TOKEN&quot;,&quot;token&quot;);&#x2F;&#x2F;https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;tokens 去这个页面生成一个有写权限的token（write:packages前打勾）</span><br></pre></td></tr></table></figure><p><strong>特别注意：token只会生成一次，且生成后不再显示，如果忘记需要重新生成，但是之前生成的就是失效。注意保存！</strong>  </p><p>修改完毕之后保存即可。  </p><h3 id="7-上传up-php"><a href="#7-上传up-php" class="headerlink" title="7. 上传up.php"></a>7. 上传up.php</h3><p>回到刚刚的浏览器中界面，如图所示操作。其中我的存在up.php文件，是因为我已经上传完毕，正常情况下是什么这个问价的。<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/eb903eaa71ccc323c497ae71179ed84b.png" alt="">  </p><h3 id="8-保存地址"><a href="#8-保存地址" class="headerlink" title="8. 保存地址"></a>8. 保存地址</h3><p>访问下列地址:<br><a href="https://www.000webhost.com/members/website/list" target="_blank" rel="noopener">https://www.000webhost.com/members/website/list</a><br>复制下方箭头所指地址：<br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/eaa794ea9f9d66ba158beeba6a47e17a.png" alt=""><br>（注：鼠标移至该地址上方图片可选择管理网站，如果因网络不佳中途是关闭网址，可以访问上述超链接进入该网址选择管理网站，进入网站的管理界面，选择其中的File Manager可进入上传up.php的界面。）  </p><h3 id="9-配置picgo"><a href="#9-配置picgo" class="headerlink" title="9. 配置picgo"></a>9. 配置picgo</h3><p>打开picgo ——&gt; 选择插件设置 ——&gt;  搜索<strong>web-uploader</strong><br><img src="https://cdn.jsdelivr.net/gh/GH670/img@master/2020/04/17/3d72ccc341177e78689395a1592da881.png" alt=""><br>之后点击插件模块右下角的设置样式，选择配置uploader -up -uploader</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">API地址填写刚刚复制的地址 + &#x2F;up.php</span><br><span class="line">POST参数名填写pic</span><br><span class="line">JSON路径填写data.url</span><br></pre></td></tr></table></figure><p>填写完毕之后，保存即可！</p><h3 id="10-自定义web图床"><a href="#10-自定义web图床" class="headerlink" title="10. 自定义web图床"></a>10. 自定义web图床</h3><p>上述全部设置完毕之后，在picgo上传区选择自定义图床。之后，就可以进行图片的上传了！</p><blockquote><p>注：参考大佬文章——&gt; <a href="https://mrhuanhao.cn/2020/03/28/solvepicnet/" target="_blank" rel="noopener">https://mrhuanhao.cn/2020/03/28/solvepicnet/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      解决picgo+github图床上传的各种问题
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-localhost</title>
    <link href="www.wblog.tech/hexo-localhost.html"/>
    <id>www.wblog.tech/hexo-localhost.html</id>
    <published>2020-04-17T02:03:43.629Z</published>
    <updated>2020-05-11T03:38:20.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>hexo 报错<br>TypeError [ERR_INVALID_URL]: Invalid URL:…检查是否成功<br>价值50元+ </p><a id="more"></a><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p><img src="https://img-ask.csdn.net/upload/202004/17/1587081764_605696.png" alt=""></p><h2 id="特别注意："><a href="#特别注意：" class="headerlink" title="特别注意："></a>特别注意：</h2><p>markdown格式书写规范。<br>上述书写自我感觉有点危险。。。<br>好吧，实践证明，就是很危险,现已更改…！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>排查bug:  </p><ol><li>反向搜查</li><li>错误提示排查</li><li>记得备份！  </li></ol><p>另：实践测试——data，失败、待改进。</p>]]></content>
    
    <summary type="html">
    
      Hexo-localhost
    
    </summary>
    
    
    
      <category term="hexo" scheme="www.wblog.tech/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>日常记事</title>
    <link href="www.wblog.tech/rijiben.html"/>
    <id>www.wblog.tech/rijiben.html</id>
    <published>2020-04-17T01:41:55.195Z</published>
    <updated>2020-05-16T11:05:17.436Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入你认为对的密码解锁...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="107ec38852a676136c13435bbd70dba0207a69b0b9c0e00da34ccb1927fbddaf">b677b62b9df0a22e71adaf4669365c35d006995f27b52a803023263d22cc28018da0d1a27fd9757858c8597e1c54576c38f4720e56feab4b2671a8907212211c924932e6c33f1743ec3331f14237c105387ddadea6e915c4742e8eccc84cf65ba090d5911e7cd87dd4ee008e1e652e9b6f5b3ae4fb68d12a533f9661e8b9667c8c902400ce2fbc3c3a2b9280537335f68c4b3e88c0ade251501430e6ace6f1b19c66898168f40ee81dc016beb6193cfbdfaa1651f87753acb4a0a6ca9905440fb0cd98abc597edd4f7255f0b55b5c8f52728207a1edb5d7c8850883b630222ae328c49fb7119b284cc0555a049d091cca2797565f24098465c1cbaf1ead930aade637322071a0e631ff3b14c9e7e9277a408a99b6e47a8dc30f1ad0fcb316e510d328944d444bbc1e7010c20e79711161f2d67db7f3afdc858e976df21a68692296480240aae47874d3dcab9ce1f082ddc9baa7b5480db0b25b9bd1276e4f747c30aac69ffad624690898eb0965dcf7f45eb57e1b2b4db0837ced418e10c79f090f7a87c87cba129d9c2772abf21397abbedbe0ba93c6d5c2022b06a4aca1271a29528dea303a1b0a06c1f0406e03f8ba17620035f330e0c86b06b301f646fc9df995ed3e3f358fa3188fe7516a81f586dee0275816ce1d0d1f7c8d64f7672a70608af2a483de97c695713cd55712b152826bc09c6a4ca542703f1f848a8840a012eb0c3cae4b6f6c4cdfb79ec95cc5493833cb5386f3bf70dc30c3d09d9911992bfca32efa246dc16ec82220f08ce12180c6c4f6dde06b6791900db5e2eef3404139928403956ce87aa990c5506a5f6e4a9201d6815530731901c0fb535a141f7cd59e5ec471d5130ae5f3ce2dab19806ba113f6c763409ad117d98016f9446afdfb79ba5a7a0c4479aa6035f96a4068af70aa2d3274bb3e82574270419d63728850f951145d467da90ece61c75a43d8aeaf50761eaffc1a89583cfbc36548b0deda91cb2ede8d90a44b228db1b1d08a7d05570fff4a24ed0404f54b2e878a5ef969cf33c333fb462f89146e9c887aef6af0d7e2b4ce5dbc7d14a10bb39866759d4353a8a895c3744f4dd93377a0276f8fcc6709993d84e2f8d6ed64237f668ff2adb7c63092b347507a242ca529a61c6abd7c7cdadb10de924389f347b923174110b69ff336eefadb1defdad1e68062c14a5c6f35d221cade50b962c4bf49ff7714849a295ff8e9ecb697b6183ee3bb7ee5ca2a1a0500a094d2ce1f149e02fdb524c22d76bf33f6c9608314a40f655404607dcf87f6bf72ecb72c6efbaf69abf04909db16e15cc32ce746bb1fedfe9726c7d90dd9c0c3f61f720bebc5258dbaf98afd5089e757d25f241d30ea886baa231ad736ed438842be4179a183fbb4d7a3ea1c757217353dcdeefe36d3c203ad73d6a4e2c8c11921e36ea54ffc9fe9a1f41674625a82ec5529232fd3b09b40fb18e601a74b9f5cd4a2608b43fbe4b9db13b04d37e4c5a4c306fcefe9d1345eb529164e10d527b890da56d4a3c8397dc19cb97ed13b07e8ee927a6b1ad16298d1b95398b09b4434bf8ee3a1a4fc6d482f57a1df91dc2cb27a43635f25c4b033310bd58c80b578a9ebd3b59e0855257b3168a19251efe448614214d14d8943b419b5efcbb397cb500cae042d47fb232ae7f687c277652a65fd4f6d0717a7248fa7f5a4cd32867f9af64eab2cd378e95ea448a2b10ef26da24a0b3e08ffd9f5c0aa67887c447e483c91225d89404b14fbb1a823edecc53bb09a4da518bfa5b3d694599f05a13c1ce27eaba3751972ef026e5b8ab1b6a9ccbcd34e54d438a748b5fed626c1e2843f3ff5527cd78ee1d79d71704c157c590cb4446b7108c8e2e2660cb95acfe6668f3a57202e42c8c9b0dd44915842116b2fa7ba238718bfd3d8cc86f65346adccf7043484da747be670f3fdea197d10e7e42dd8b1e6fdaebb506cc8b81a785bb45e7fb2529d6f2feaeb830ed116ca00403dd78652fdd96635d26e69c877cc317e5f924f9a7b85ab44c8b29177f4497c06b9ee9a9acc4b240bc47ef13ba8bdbb94282648f9baf95083e1662af662d7649ad5c903fd676d7c56ea78cc9c79d849b66163d1fc03bd15fbc4140b3acdbd4622c30cf32df95fbaf0784e399bc69783fd6665ecec2f2a1bde0ec56d0cce3adb06133ed1dba60b1bf15a9ea521246ab568a2400be4ce3df7ba8dab4b7a487ca024f4416d26ccc64cad8857b4788916b050c38ad495c5a68a8d8e04d855e5778285265a8ef2e2ff7f22bf57b8f2f30c14511390b9a6dfb1074edac243a82749ac120ec34328dfba47d0357dc5e4580c98fc1e89fbf5fba3f41fe8a8e811e32a6b779635bf5d5a6ca510f0a34acf153f5c090da59326c965362e7106e3937997f14246db8c20f6a6190c34ba722b232c3efbd75204f434203fee02fffca1db24443c320db34ec94d2b4dffa196b647b2ea21e3e7c1495bdd289411674bbf5ec1aa5ce838a196f150330f5bcb0bec07fda5b68f4452ad1f1f4309fa4b5742ef567ea8f4a86f8433dfc6141b8c4a2543bac37edd8b6e29cde2115d9ddb7d33828a4a3ff2b11cedf495859b4ddcc2d33f996c4a00d3d3203b44abd609e68c2ccddac1cfcfd8dcd63b7ac6d8437462eccda21865ecf5e94bf909122ff5cbc6f455e307ee0b9df85be6147bed36b8e205776c2cf96a30c4e173e19d08843333d79bc952b58bd12e5986af53356dde6bafd0fd6d3615a53633b0be7785ddabf56c45d4c82716f991fe8e2e03635b27ef423ef4ea2a8e2d35da47aec65d7f425b17098f17979a60f6b132fd8e02d0e527f93cab9f71e916cbb45997837512ee154944b27b69ad617b9f614187af53041d66e53156d1b147de31f7fccb93e130770a09051b6ea98a53ca725a7f4a85b8b0eaacf3a163f83d4430e3bc1fef8adb97e0b97a6998b5d83942bb97910a8e716e94617fa84bbccb10ca31253b7077aef4886d017d38288bafbbd510ac6be607341bd997a1afce103f16ad2d5121953fd644b8ec8d7a00fb583b659054fdab8511af7e9daecc4f93800c9f5b9a16cb642663688983e39a74059699c44a8c3f5174ceb37dc89baa198c164f9a97c7f69a01da7fe66472fa402c6969d14474f4632daee0ee44df9be430f8b6745c12700d4638e764c69e2495bbe8f8d40f7cdd08077122bfc51dcb246a2367e56973e5793bec2e1f2bc12be81a2de066f7ccfa3058b36b4889b6dbcf82ece12a064dc3038f6b78463c697b6b0ee29be436bf922212d2d89847b9ff11f1c6688a805e63b5e3dc2500f51c6ffca901c7da1168d4fa68e8f53043d8ac2a7295717e8d645b1fd5527ff5eac3236f4cb70c329541be86c1e5f1c83f4d0086d8e5cce1fa53d713c3955b00bd7bb447938af397191c0872521eb8471f8914550993d55a85c517b79412b7e48792bf89c48349cbdfa2ca6f61c96d76ab2b551edf24744688b58e1974f98647cebdec3047c67034745a559ab78ac4fb7b70f9fbe2804765dcb3e44398e00d851b77c1ea9bdd82b12863095e9aa2616f409d7e89b72e4ee2dc7389f47006248a55743593eec1ca72d215d6960d0abc493c619886bd281eb1af68cf7b099fb003c9108682e89d44db2b3ee1b2ad5d6b5d966c8c547afd17345c9faa8dd9d12dc4f2492fc38147af284408fe51a1cb3f3bc9c789b44bf4011856b787942cfaf1f010ae692d04444765e3d14fbcddb714e1cac8251388eb67d2f74b252840d7900e8f2bc2792cada27411db9f510f41112cf38c9b97eee96b97a2f1335f278d6edd3b8530c58cd237b3f7648ac8c470662cc637400732af193b9a2c0d4b71a92360139dde743ec6b561fe25748aa77235463bf60f32150a0854672d011cb44ac2fc99796f3eff6c7fde5fd0336920536184e0daa81dba3d68bb796bdd892a90c4933c314ba604a533871eaf2eaf8097f9fc6f5b4feed6ae005771e4015a1c647e9a875adc850affd0582b725f14f27f2c1fcede2dc1ab7b7a5dffac3a2997bacc0b5dc16f13af34544d80a6ffc06cf028af225de72f2e9e368ab1199d93ea3d634b0ce2f6996f90d804d6b04a0a0fb709b8d1c79d0ed124e13b7e7338566ee805dc66da593ea1f6b31e2271e7a6ef2aa9f038d1f7f670c1829f0420e2b58268a7416170318b15eae29e07217ec3ee508fe5197f1a40b5d5a102969cc7411783b983bb3ebb9fb64be02a779366892d3d1deb2ac083c56f3e7a5ac651ce3d721ef3133f02aed85cd76cb434df982b5baa11a301ebe5d093f9fc42b9599530407d1000a278385dd85207de6344a4b0e1bd7d1b31634a0cdb618723d3e735125008d2b379f3c3cb235c039db06ea1bc6c978e666f2a46156fa4ec5f73ec2971e448327499c619af0a44ed323b91ee1f6baf52614731c3769b9e53abca82374386526c7a3feb41d87b3ef1f2afffe0ea294ba16d9a18616c133928beecc1ec5ff31b4b599ad03d60895959f9b36e70b1aac4b9e88d255dd2ce0b8e51817d9d21a9ff0da66acf6f1f851d219f57123724da04b72dfd663824b22a9d6a6ec965f8069d1b89235407e98212b09c4517e7f35b18540603d673559a791931723e19679a4c947dbd55e63c5944e0109c6b55b16877bc327fb360be1dee227ab556e7c020633affe4ba52b509b3a89962c751c3beaee486efe63d402520d2ca30061c5e81a0d527568beb0af308e55eb04fe5704226d13262e2fb0f325b2ded2ab4a8a64c9ba79a07534d9b30fa55dc0804bc6298bd01a6648e08bea40ccbf5c71119f0a45b17ac5b2d41b5bd646dcbc379278df8f70b4220cb6ba474527f01e64dea6ecd194f7309ae87707c9afa535387fbc5292b363a03f0da7f0ff26ba2f83bd82a3027c465510fc7e4565e3bbc684310699313af88f30bb1af496e615a6a02ff24e1aae0fb861f78f3db4576f41c3b86e5ca6d229f1ea08b84fa3c79f4cfff45bccf3c2927ea937b84d64c1c24f9fb5850b20cabc333b2515d0068e7105c37ce5305b5e9f6899f4b0ea564c7af6cbc6d82301c3b0c9296715980059097aa7977bbac745503d506c57c163f6cfcfd0c832c6d7eb61571adb8189cbda91329664f3fd11bd8b574d008447a9915e652a26405047a55b9723bdfd80678181641fc99b94cca8fccee375934ee870098b90dd5a50cfb3d7f5f801b7ac7b7b6662bd034efb1a4387f2b1a5d3b323e5e9184be11680a667b62be7c0a816e94bc92a9124175dfb71b5ebcf6399256ab5124585e6106e0bbfbd573f7a89f2103535d43394c260046ef40f2dfc9f874f927af7045b119a33392f420ca7dd0854faec384f90a610573ec488f68af2a25b1614e4de6bcad1964c488faf68bb7bbd110f8b10ec9429</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文。无密码拒绝访问！
    
    </summary>
    
    
    
      <category term="随笔记事" scheme="www.wblog.tech/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>2020年-元年</title>
    <link href="www.wblog.tech/jihua20.html"/>
    <id>www.wblog.tech/jihua20.html</id>
    <published>2020-04-17T01:41:55.186Z</published>
    <updated>2020-05-16T11:05:55.561Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">你不能一直做一些烂事，然后自己后悔，好像后悔有用一样，你需要变好。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ed8062934093dc622b3c726966dacebe12777d3003b8a651df85d416fed1eb37">1459a842658dc431eb8d3390640026085dc8dba30abea5c8878adf87049cf3f51d485dba0c2a14b80ea724d10b9ea6f1ec0fedf7b39a661c1cefaee94a1e5f97c67b8524a63ebbdd77d8518068346a8e0943718998ba7452c1c2440e88d14e8deb5cfd86420fafab9ea8a10c346c302f4c461a0890578ac2c0e73425f7c446c4e5616163415c8c126bb44b6120d00d1e4ca7e1ec92c8af844aab6a624328057ec26bd6d59e44fbd6fe138ec315a953922641c8dcb13da8c123ab9a9be22832385f73793476b1a91cd00a4b64c2408435df76099ade55664ad480340985c6b6857f1e05d0e4d32efc43124c976aebc65f4933d9c4e9109b9aca2777f8be7fa2cbea4c9da6eda24de2d5808eabd7f8d7bff6498bf26c195e76a6f37efbe1e40a0ab6685a16d17b7ab8cbbdda55c6ec8592ae4775e2520d7a7bb4e4b8790969fbb924a2479d2b00957b78dd12e806f1766f5481604067b15221188f1bd8fe27609f7e9ff345349a8d04d2b0678d065fc71501e07bf1fdb8c42f26ed84caf2eab6dfb12241307c759027ec5a53f474f7c0663ffbbdd52223d291b5d4f717d64e2c0b52c1b810196dea28f0931f54086ac91e3bb1ea96c876cf153e8b5c0e5a9f53a1e9219e7c9355fecca9d198c6ef6526686865e0303df231cf409d2a9bfcb103ddd3502e1efe418dc4fb1e23542ed2a5a333053bfdec3047fc00a19f0e04ced586e492097f8e2b070b4ddb1f07fce5323ee6ae7015a905ec265e66c543bad2c19f0b1877f7ae2e61b48d36eb4783d1652fcd2dfa2b03160269f3b45eed662fd1a5af6ab237bb8582643690a3c899825b61f085230fc63f794eb86aa61064c47427ec035b2929f9bd1375dc8c87b424e3bbf1d1e85c5d936aa7752223183e74e5f39b24a305aa94b5fb87a1c585c00916f581c9943dab0c09efad1403842a9f79556380bc19f46b7bb35754a4289d38d3e471af5082432979ac9add4cb2e2d419dc2028efa3130c50b7a40a95ae660bd5b735d3e9934bc09d3336f650a3ee8dd9b1e96dee7c82a43e3e19c93c968a8d047f5ddc3de149e23de441a7b9add639297b07e10416c0cda1060e25a0089ad9f5a74d016048efa0b4764c4698231b1c62554178b370b8aefac672169d4fbec4ebd9ceb022618aa5881229ce538d952d9eed269491bfcb557f3db41495a4afb908c32a19c79690518bdbaf5f0d1071987637a329a43e81d624dea6eefea123861df83a79d0d00470a4fac21d342acae059e8c300381a5541bfec9c8510afb221b9b4c15d403f53ae4627af4f4f7b96058e0363139fb448d2ada2dc20f347a9984873670afcd861310dcc2059d7fb7caf80e1f80ab93a65d6f582ecf2ed8f8a8da130f7c726b9bb4f6bef3bb92a8ba080805f280a6de266603d66accac03aed09b57aebaf7d5b8a43b5bf048b8812ea387d5629a81e6341d0bf44f7501f1c9633e41ea14975f75be0cc60e3e84768d85957b1d0548db588241248782afd28870c82a2855270cb876b3e6199eb9f2689452f0629d6cd24b6475af678de34edb08bdb6996e88a96caebabaeba58788d17d685a1558929ae5ff87002cca57abaf0aa55c200be053dd7905feab02f719ef0f2fdfdb5b4bec974c3e76a032f4d4600fa515dd5fe1cb7040776a0b0e51f940bbd18e5b95fc57c92084b738482a99e99b7ac3f23d9be0e86197004540267a9c780412b1ae5e24eeeca65aa20879e43127eefc57827db4b4ed3909e4d96026aa5fddba931729f9f417521eb877a6f8e65424f029b8c9a6cca53aee9d6ccff01f819e58c939e80450a36ab8f3ee86850353a227b211bc04fa342a58752656c1247b7302915373095d4acc9df8ac41fecacf102c6865c669115ac11ab3e76a33e771a5c6b40464053a72731e60a769d1fb9b548b4dd00bbb0913467130a53883f6910f7e4bc69b624952c0d8d0e8eb5f05993cf1dbc37784d720cd5d168916bbb5458ddca7f9cc275cb88b82b5b45f692d3f0a30cdd8a1e2306f05d5a26add7c99c4fe4530038562ee21ec73e46b78c3a1b7cfd4c98521f61ec56a4bb5e3d0008e535597fa474ccbf871b5b5f500e029a246df750e74deee5cad13675495b005bb4d9dca565468455ad13187587ec216544bca726f14de079b76b6754ea55c4f106f96b1d836b2ce51c6d6b9adf4b1a6f072e59000e9ee6f1545d11a66f5e7308d1307963c84252f9d8bfc5fc0a92d3afb32afce6d49ce76001f09107fb11b27f0842adf1defd4e9414a952f18217003bedcab23030ad47549c81aba94625b9795f62bdb4</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      ⚠首页说明❗❗❗博主比较菜，计算机专业初级学者，感谢访问。如有bug烦请告知❗学习复习备考ing
    
    </summary>
    
    
    
      <category term="随笔记事" scheme="www.wblog.tech/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>算法相关-小知识点</title>
    <link href="www.wblog.tech/algorithm.html"/>
    <id>www.wblog.tech/algorithm.html</id>
    <published>2020-04-17T01:33:21.048Z</published>
    <updated>2020-05-11T03:35:10.961Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一部分的算法小知识"><a href="#一部分的算法小知识" class="headerlink" title="一部分的算法小知识~"></a>一部分的算法小知识~</h3><p>1.万能头文件<br>#include &lt;bits/stdc++.h&gt;<br>包含C++的所有头文件，但会降低编程速度，编译原理相关问题。</p>]]></content>
    
    <summary type="html">
    
      算法相关
    
    </summary>
    
    
    
      <category term="算法" scheme="www.wblog.tech/tags/algorithm/"/>
    
  </entry>
  
</feed>
